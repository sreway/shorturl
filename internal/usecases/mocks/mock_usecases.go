// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/usecases/interfaces.go

// Package usecaseMock is a generated GoMock package.
package usecaseMock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	url "github.com/sreway/shorturl/internal/domain/url"
)

// MockShortener is a mock of Shortener interface.
type MockShortener struct {
	ctrl     *gomock.Controller
	recorder *MockShortenerMockRecorder
}

// MockShortenerMockRecorder is the mock recorder for MockShortener.
type MockShortenerMockRecorder struct {
	mock *MockShortener
}

// NewMockShortener creates a new mock instance.
func NewMockShortener(ctrl *gomock.Controller) *MockShortener {
	mock := &MockShortener{ctrl: ctrl}
	mock.recorder = &MockShortenerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShortener) EXPECT() *MockShortenerMockRecorder {
	return m.recorder
}

// CreateURL mocks base method.
func (m *MockShortener) CreateURL(ctx context.Context, rawURL, userID string) (url.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateURL", ctx, rawURL, userID)
	ret0, _ := ret[0].(url.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateURL indicates an expected call of CreateURL.
func (mr *MockShortenerMockRecorder) CreateURL(ctx, rawURL, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateURL", reflect.TypeOf((*MockShortener)(nil).CreateURL), ctx, rawURL, userID)
}

// GetURL mocks base method.
func (m *MockShortener) GetURL(ctx context.Context, urlID string) (url.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURL", ctx, urlID)
	ret0, _ := ret[0].(url.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetURL indicates an expected call of GetURL.
func (mr *MockShortenerMockRecorder) GetURL(ctx, urlID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURL", reflect.TypeOf((*MockShortener)(nil).GetURL), ctx, urlID)
}

// GetUserURLs mocks base method.
func (m *MockShortener) GetUserURLs(ctx context.Context, userID string) ([]url.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserURLs", ctx, userID)
	ret0, _ := ret[0].([]url.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserURLs indicates an expected call of GetUserURLs.
func (mr *MockShortenerMockRecorder) GetUserURLs(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserURLs", reflect.TypeOf((*MockShortener)(nil).GetUserURLs), ctx, userID)
}
